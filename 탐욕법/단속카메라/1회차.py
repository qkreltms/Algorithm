# 문제
'''
고속도로를 이동하는 모든 차량이 고속도로를 이용하면서 단속용 카메라를 
한 번은 만나도록 카메라를 설치하려고 합니다.

고속도로를 이동하는 차량의 경로 routes가 매개변수로 주어질 때, 
모든 차량이 한 번은 단속용 카메라를 만나도록 하려면 최소 몇 대의 
return 카메라를 설치해야 하는지

1. 차량의 진입/진출 지점에 카메라가 설치되어 있어도 카메라를 만난것으로 간주합니다.
2. 차량의 진입 지점, 진출 지점은 -30,000 이상 30,000 이하입니다.
3. 차량의 대수는 1대 이상 10,000대 이하입니다.

-20 -------------------------------------- 15
     -18 ------ -13    |
           -14 ------ -5
           |          -5 -- -3
           |           |
         카(-15)     카(-5)
'''
# 풀이법
'''
1. x[0] 기준으로 반대로 정렬을 한다. (반대로 정렬하는 이유는 엄청 긴 값이 나왔을 때 x값이 마이너스 값이면 2번 알고리즘의 예외사항이 발생함)
2. 하나를 골라서 겹처있는 것들과 자기자신 제거한 후 ans += 1
'''
# 배운점
'''
배열 안에서 해당 배열의 어떤 값을 삭제하는 연산이 있을 때 예상치 못한 예외 발생 함.
예를 들어 [1,2,3,4]가 있을 때 2,3을 삭제하면 4 건너뜀
그러므로 배열의 빈 값을 체크해주는 loop를 사용하고, 삭제할 개수를 정한 후 그 만큼 루프를 돌면서 pop(0) 하는 연산으로 우회함. 
'''


def solution(routes):
    routes.sort(key=lambda x: x[0], reverse=True)
    ans = 0
    while routes:
        ans += 1
        cnt = 0
        for [x, y] in routes:
            if routes[0][0] <= y:
                cnt += 1
                continue
            break
        for i in range(cnt):
            routes.pop(0)
    return ans


print(solution([[-20, 15], [-14, -5], [-18, -13], [-5, -3]]), 2)
print(solution([[-4, 20], [-14, -5], [-18, -13], [-5, -3]]), 2)
print(solution([[-10, -9], [-8, -7], [-6, -5]]), 3)
