#문제
'''
옷이 주어질 때 서로 다른 옷의 조합의 수를 return
단, 최소 한개의 의상은 입는다.
'''
#내 실수
'''
수학 ㅠㅠ
'''
#키 포인트
'''
같은 종류의 옷은 조합에 포함되지 않기 때문에 다른 종류의 아이템을 곱한다, 단 없을 경우 아이템 + 1
예: 상의: A,B,C 하의: A 가 있을 때 3*1=3 개의 조합이 나오는데(그래프를 그리면 이해하기 편함) 이 경우
모두다 존재할 때의 경우의 수 이므로 각 아이템에서 없을 때의 경우를 하나 넣어줘서
곱을한다. X=이 아이템이 없을 때의 경우, 상의: A,B,C,X, 하의: A,X 4*2 = 8
두 아이템 다 없을 때의 경우의 아이템이 있으므로 모두다 없을 때가 있을 것이다.
그러므로 모두다 없는 경우의 수 (1)를 마지막에 빼준다.
'''
#알게된 것
'''
Counter
'''
from collections import Counter
def solution(clothes):
    ans = 1
    for _,c in Counter(map(lambda x: x[1], clothes)).items():
        ans *= (c + 1)
    return ans - 1 

print(solution([['1', 'A'], ['1', 'B'], ['1', 'A']]))
print(solution([['1', 'A'], ['1', 'A'], ['1', 'A']]))
        
